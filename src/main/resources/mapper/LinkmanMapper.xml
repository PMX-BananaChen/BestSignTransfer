<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.primax.bestsigntransfer.admin.mapper.LinkmanMapper">
    
    <resultMap type="Linkman" id="LinkmanResult">
        <result property="detailid"    column="DetailId"    />
        <result property="name"    column="Name"    />
        <result property="relationship"    column="Relationship"    />
        <result property="phonenumber"    column="PhoneNumber"    />
        <result property="address"    column="Address"    />
        <result property="parentid"    column="ParentId"    />
    </resultMap>

    <sql id="selectLinkmanVo">
        select DetailId, Name, Relationship, PhoneNumber, Address, ParentId from linkman
    </sql>

    <select id="selectLinkmanList" parameterType="Linkman" resultMap="LinkmanResult">
        <include refid="selectLinkmanVo"/>
        <where>  
            <if test="name != null  and name != ''"> and Name like concat('%', #{name}, '%')</if>
            <if test="relationship != null "> and Relationship = #{relationship}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and PhoneNumber = #{phonenumber}</if>
            <if test="address != null  and address != ''"> and Address = #{address}</if>
            <if test="parentid != null  and parentid != ''"> and ParentId = #{parentid}</if>
        </where>
    </select>
    
    <select id="selectLinkmanByDetailid" parameterType="Long" resultMap="LinkmanResult">
        <include refid="selectLinkmanVo"/>
        where DetailId = #{detailid}
    </select>
        
    <insert id="insertLinkman" parameterType="Linkman">
        insert into linkman
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="detailid != null">DetailId,</if>
            <if test="name != null">Name,</if>
            <if test="relationship != null">Relationship,</if>
            <if test="phonenumber != null">PhoneNumber,</if>
            <if test="address != null">Address,</if>
            <if test="parentid != null">ParentId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="detailid != null">#{detailid},</if>
            <if test="name != null">#{name},</if>
            <if test="relationship != null">#{relationship},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="address != null">#{address},</if>
            <if test="parentid != null">#{parentid},</if>
         </trim>
    </insert>

    <update id="updateLinkman" parameterType="Linkman">
        update linkman
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">Name = #{name},</if>
            <if test="relationship != null">Relationship = #{relationship},</if>
            <if test="phonenumber != null">PhoneNumber = #{phonenumber},</if>
            <if test="address != null">Address = #{address},</if>
            <if test="parentid != null">ParentId = #{parentid},</if>
        </trim>
        where DetailId = #{detailid}
    </update>

    <delete id="deleteLinkmanByDetailid" parameterType="Long">
        delete from linkman where DetailId = #{detailid}
    </delete>

    <delete id="deleteLinkmanByDetailids" parameterType="String">
        delete from linkman where DetailId in 
        <foreach item="detailid" collection="array" open="(" separator="," close=")">
            #{detailid}
        </foreach>
    </delete>
</mapper>