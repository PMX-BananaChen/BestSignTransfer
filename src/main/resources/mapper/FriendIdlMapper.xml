<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.primax.bestsigntransfer.admin.mapper.FriendIdlMapper">
    
    <resultMap type="FriendIdl" id="FriendIdlResult">
        <result property="detailid"    column="DetailId"    />
        <result property="name"    column="Name"    />
        <result property="occupation"    column="Occupation"    />
        <result property="phonenumber"    column="PhoneNumber"    />
        <result property="address"    column="Address"    />
        <result property="parentid"    column="ParentId"    />
    </resultMap>

    <sql id="selectFriendIdlVo">
        select DetailId, Name, Occupation, PhoneNumber, Address, ParentId from friend_idl
    </sql>

    <select id="selectFriendIdlList" parameterType="FriendIdl" resultMap="FriendIdlResult">
        <include refid="selectFriendIdlVo"/>
        <where>  
            <if test="name != null  and name != ''"> and Name like concat('%', #{name}, '%')</if>
            <if test="occupation != null  and occupation != ''"> and Occupation = #{occupation}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and PhoneNumber = #{phonenumber}</if>
            <if test="address != null  and address != ''"> and Address = #{address}</if>
            <if test="parentid != null  and parentid != ''"> and ParentId = #{parentid}</if>
        </where>
    </select>
    
    <select id="selectFriendIdlByDetailid" parameterType="Long" resultMap="FriendIdlResult">
        <include refid="selectFriendIdlVo"/>
        where DetailId = #{detailid}
    </select>
        
    <insert id="insertFriendIdl" parameterType="FriendIdl">
        insert into friend_idl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="detailid != null">DetailId,</if>
            <if test="name != null">Name,</if>
            <if test="occupation != null">Occupation,</if>
            <if test="phonenumber != null">PhoneNumber,</if>
            <if test="address != null">Address,</if>
            <if test="parentid != null">ParentId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="detailid != null">#{detailid},</if>
            <if test="name != null">#{name},</if>
            <if test="occupation != null">#{occupation},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="address != null">#{address},</if>
            <if test="parentid != null">#{parentid},</if>
         </trim>
    </insert>

    <update id="updateFriendIdl" parameterType="FriendIdl">
        update friend_idl
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">Name = #{name},</if>
            <if test="occupation != null">Occupation = #{occupation},</if>
            <if test="phonenumber != null">PhoneNumber = #{phonenumber},</if>
            <if test="address != null">Address = #{address},</if>
            <if test="parentid != null">ParentId = #{parentid},</if>
        </trim>
        where DetailId = #{detailid}
    </update>

    <delete id="deleteFriendIdlByDetailid" parameterType="Long">
        delete from friend_idl where DetailId = #{detailid}
    </delete>

    <delete id="deleteFriendIdlByDetailids" parameterType="String">
        delete from friend_idl where DetailId in 
        <foreach item="detailid" collection="array" open="(" separator="," close=")">
            #{detailid}
        </foreach>
    </delete>
</mapper>